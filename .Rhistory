title = "GDP per capita",
y = "",
color = "Country") +
scale_y_log10(labels = scales::label_dollar(), breaks = scales::breaks_extended(n = 8)) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df[df$country %in% countries,], aes(year, g, color = country)) +
geom_line(linewidth = 1) +
geom_line(aes(x = year, y = 0), linewidth = 1, linetype = 4,  color = "black") +
labs(
title = "Growth",
y = "",
color = "Country") +
scale_y_continuous(labels = scales::label_percent(), breaks = scales::breaks_extended(n = 8)) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df[df$country %in% countries,], aes(year, k, color = country)) +
geom_line(linewidth = 1) +
labs(
title = "Capital per capita",
y = "",
color = "Country") +
scale_y_continuous(labels = scales::label_comma(), breaks = scales::breaks_extended(n = 8)) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df[df$country %in% countries,], aes(year, g, color = country)) +
geom_line(linewidth = 1) +
geom_line(aes(x = year, y = 0), linewidth = 1, linetype = 4,  color = "black") +
labs(
title = "Growth",
y = "",
color = "Country") +
scale_y_continuous(labels = scales::label_percent(), breaks = scales::breaks_extended(n = 8)) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df[df$country %in% countries,], aes(year, y, color = country)) +
geom_line(linewidth = 1) +
labs(
title = "GDP per capita",
y = "",
color = "Country") +
scale_y_log10(labels = scales::label_dollar(), breaks = scales::breaks_extended(n = 8)) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df[df$country %in% countries,], aes(year, k, color = country)) +
geom_line(linewidth = 1) +
labs(
title = "Capital per capita",
y = "",
color = "Country") +
scale_y_continuous(labels = scales::label_comma(), breaks = scales::breaks_extended(n = 8)) +
theme(plot.title = element_text(hjust = 0.5))
ggplot(df[df$country %in% countries,], aes(year, i, color = country)) +
geom_line(linewidth = 1) +
labs(
title = "Interest rate",
y = "",
color = "Country") +
scale_y_continuous(labels = scales::label_percent(), breaks = scales::breaks_extended(n = 8)) +
theme(plot.title = element_text(hjust = 0.5))
df[df$country %in% countries,]
df[df$country %in% "United States of America",]
ggplot(df[df$country %in% countries, ], aes(year, alpha, color = country)) +
geom_line(linewidth = 1) +
labs(
title = "Capital Share",
y = "",
color = "Country") +
scale_y_continuous(labels = scales::label_comma(), breaks = scales::breaks_extended(n = 8)) +
theme(plot.title = element_text(hjust = 0.5))
rm(list = ls())
library(pwt10)
library(tidyverse)
library(scales)
library(ggthemr)
ggthemr('fresh')
pwt <- pwt10.01
df <- pwt %>%
group_by(country) %>%
reframe(
year,
y = rgdpo / pop,              # GDP per capita
g = c(NA, diff(log(y))),      # Growth rate with proper alignment
k = cn / cgdpo,               # Capital-output ratio
alpha = 1 - labsh,            # Capital share
i = irr,                      # Investment rate
delta,                        # Depreciation rate
n = c(NA, diff(log(pop))),    # Population growth
ly = log(y),                  # Log of GRP per capita
s = csh_i,                    # Rename save
hc                            # Human capital
)
# 1950-1970
aggregate(. ~ country,
data = df[df$year %in% 1950:1970, !names(df) %in% "year"],
mean, na.rm = TRUE)
# 1950-1970
aggregate(. ~ country,
data = df[df$year %in% 1950:1970, !names(df) %in% "year"],
mean, na.rm = TRUE)
# 1970-1990
aggregate(. ~ country,
data = df[df$year %in% 1970:1990, !names(df) %in% "year"],
mean, na.rm = TRUE)
# 1990-2010
aggregate(. ~ country,
data = df[df$year %in% 1990:2010, !names(df) %in% "year"],
mean, na.rm = TRUE)
conv_df <- df %>%
group_by(country) %>%
filter(year >= 1970 & year <= 2020) %>%
reframe(
gy = mean(g, na.rm = TRUE),    # Mean growth rate
ly = first(ly),                # First `ly` value
s = last(s),                   # Last `s` value
n = last(n),                   # Last `n` value
delta = last(delta),           # Last `delta` value
hc = last(hc)                  # Last `hc` value
)
# Convergencia no condicional
summary(lm(gy ~ ly, conv_df))
# Convergencia condicional
summary(lm(gy ~ . -country, conv_df))
summary(lm(gy ~ . -n -delta -country, conv_df))
summary(lm(gy ~ . -n -delta -country, conv_df))
rm(list = ls())
library(tidyverse)
library(pwt10)
data("pwt10.01")
pwt <- data("pwt10.01")
rm(pwt10.01)
pwt <- data("pwt10.01")
pwt
pwt <- data(pwt10.01)
rm(list = ls())
library(tidyverse)
library(pwt10)
pwt <- data(pwt10.01)
pwt <- data("pwt10.01")
rm(pwt10.0)
rm(pwt10.0)
rm(pwt)
pwt <- data("pwt10.01")
head(pwt)
pwt <- data(pwt10.01)
pwt <- pwt10.01
rm(pwt10.01)
View(pwt)
pwt %>%
aggregate(rgdpo + hc ~ country, FUN = function(x){mean(x)})
pwt %>%
aggregate(rgdpo ~ country, FUN = function(x){mean(x)})
pwt <- pwt10.01 %>%
group_by(country) %>%
reframe(
year,
country,
y = rgdpo / pop,              # GDP per capita
g = c(NA, diff(log(y))),      # Growth rate with proper alignment
s = csh_i,                    # Rename save
n = c(NA, diff(log(pop))),    # Population growth
delta                        # Depreciation rate
)
names(pwt)[-2]
names(pwt)[3:]
names(pwt)[3::]
names(pwt)[3:length(pwt)]
aggregate(col ~ country)), data = pwt, FUN = mean)
aggregate_results <- lapply(names(pwt)[3:length(pwt)], function(col) {
aggregate(col ~ country, data = pwt, FUN = mean)})
aggregate(pwt[[col]] ~ pwt$country, FUN = mean)
aggregate_results <- lapply(names(pwt)[3:length(pwt)], function(col) {
aggregate(pwt[[col]] ~ pwt$country, FUN = mean)})
lapply(names(pwt)[3:length(pwt)], function(col) {
aggregate(pwt[[col]] ~ pwt$country, FUN = mean)})
lapply(names(pwt)[3:length(pwt)], function(col) {
aggregate([[col]] ~ country, data = pwt, FUN = mean)})
lapply(names(pwt)[3:length(pwt)], function(col) {
aggregate(pwt[[col]] ~ country, data = pwt, FUN = mean)
})
results <- lapply(names(pwt)[3:length(pwt)], function(col) {
aggregated <- aggregate(pwt[[col]] ~ country, data = pwt, FUN = mean)
names(aggregated) <- c("country", col)  # Rename columns appropriately
return(aggregated)
})
View(aggregate_results)
View(results)
data.frame(results)
View(aggregate_results)
View(results)
unlist(results)
results <- sapply(names(pwt)[3:length(pwt)], function(col) {
aggregated <- aggregate(pwt[[col]] ~ country, data = pwt, FUN = mean)
names(aggregated) <- c("country", col)  # Rename columns appropriately
return(aggregated)
})
results <- lapply(names(pwt)[3:length(pwt)], function(col) {
aggregated <- aggregate(pwt[[col]] ~ country, data = pwt, FUN = mean)
names(aggregated) <- c("country", col)  # Properly rename columns
return(aggregated)
})
# Combine all aggregated results into one data frame
final_result <- Reduce(function(x, y) merge(x, y, by = "country"), results)
View(final_result)
# Combine all aggregated results into one data frame
Reduce(function(x, y) merge(x, y, by = "country"), results)
pwt <- pwt10.01 %>%
group_by(country) %>%
reframe(
year,
country,
y = rgdpo / pop,              # GDP per capita
g = c(NA, diff(log(y))),      # Growth rate with proper alignment
s = csh_i,                    # Rename save
n = c(NA, diff(log(pop))),    # Population growth
delta                        # Depreciation rate
)
results <- lapply(names(pwt)[3:length(pwt)], function(col) {
aggregated <- aggregate(pwt[[col]] ~ country, data = pwt, FUN = mean)
names(aggregated) <- c("country", col)  # Properly rename columns
return(aggregated)})
# Combine all aggregated results into one data frame
Reduce(function(x, y) merge(x, y, by = "country"), results)
library(agricolae)
install.packages("agricolae")
library(agricolae)
trt <- c("A", "B", "C", "D")  # Treatments
k <- 3  # Number of treatments per block
my_design <- design.bib(trt, k, seed = 42)
my_design$statistics
my_design$sketch
aggregated <- pwt %>%
group_by(country) %>%
summarise(across(-c(1, 2), mean, na.rm = TRUE), .groups = "drop")
?across
aggregated <- pwt %>%
group_by(country) %>%
summarise(across(-c(1, 2), function(x){mean(x, na.rm = TRUE)}), .groups = "drop")
View(aggregated)
rm(list = ls())
library(tidyverse)
library(pwt10)
pwt <- pwt10.01 %>%
group_by(country) %>%
reframe(
year,
country,
y = rgdpo / pop,              # GDP per capita
g = c(NA, diff(log(y))),      # Growth rate with proper alignment
s = csh_i,                    # Rename save
n = c(NA, diff(log(pop))),    # Population growth
delta                        # Depreciation rate
)
aggregated <- pwt %>%
group_by(country) %>%
summarise(across(-c(1, 2), function(x){mean(x, na.rm = TRUE)}), .groups = "drop")
head(aggregated)
?plot
plot(aggregated$s, aggregated$g)
ggplot(aggregated, aes(s,g)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm")
ggplot(aggregated, aes(s,g)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F)
?geom_smooth
ggplot(aggregated, aes(s,g)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F, show.legend = T)
ggplot(aggregated, aes(s,g)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F, show.legend = "fadfa")
?geom_smooth
ggplot(aggregated, aes(s,g)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F)
ggplot(aggregated, aes(s,g)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F)
cor(aggregated$g, aggregated$s)
# Test for OECD countries
# OECD countries vector
oecd_countries <- c(
"Australia", "Austria", "Belgium", "Canada", "Chile", "Colombia", "Costa Rica",
"Czech Republic", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Iceland", "Ireland", "Israel", "Italy", "Japan", "Korea", "Latvia",
"Lithuania", "Luxembourg", "Mexico", "Netherlands", "New Zealand", "Norway",
"Poland", "Portugal", "Slovak Republic", "Slovenia", "Spain", "Sweden",
"Switzerland", "Turkey", "United Kingdom", "United States"
)
# Example: filter the pwt dataset for OECD countries
oecd <- aggregated[aggregated$country %in% oecd_countries, ]
ggplot(oecd, aes(s,g)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F)
cor(oecd$g, oecd$s)
cor(aggregated$g, aggregated$s)
cor(oecd$g, oecd$s)
length(oecd$countries)
length(oecd$country)
length(oecd_countries)
setdiff(oecd_countries, oecd$country)
unique(aggregated$country)
sort(unique(aggregated$country))
# Test for OECD countries
# OECD countries vector
oecd_countries <- c(
"Australia", "Austria", "Belgium", "Canada", "Chile", "Colombia", "Costa Rica",
"Czech Republic", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Iceland", "Ireland", "Israel", "Italy", "Japan", "Republic of Korea", "Latvia",
"Lithuania", "Luxembourg", "Mexico", "Netherlands", "New Zealand", "Norway",
"Poland", "Portugal", "Slovakia", "Slovenia", "Spain", "Sweden",
"Switzerland", "Turkey", "United Kingdom", "United States of America"
)
# Example: filter the pwt dataset for OECD countries
oecd <- aggregated[aggregated$country %in% oecd_countries, ]
ggplot(oecd, aes(s,g)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F)
cor(oecd$g, oecd$s)
setdiff(oecd_countries, oecd$country)
knitr::opts_chunk$set(echo = TRUE)
library(tidymodels)
library(tidymodels)
library(sparklyr)
# Configurar Spark
sc <- spark_connect(master = "local")
# Configurar Spark
sc <- spark_connect(master = "local")
spark_install()
spark_install()
# Configurar Spark
sc <- spark_connect(master = "local")
# Configurar Spark
sc <- spark_connect(master = "local")
library(tidyverse)
library(pwt10)
pwt <- pwt10.01 %>%
group_by(country) %>%
reframe(
year,
country,
y = rgdpo / pop,              # GDP per capita
g = c(NA, diff(log(y))),      # Growth rate with proper alignment
s = csh_i,                    # Rename save
n = c(NA, diff(log(pop))),    # Population growth
delta                        # Depreciation rate
)
aggregated <- pwt %>%
group_by(country) %>%
summarise(across(-c(1, 2), function(x){mean(x, na.rm = TRUE)}), .groups = "drop")
View(aggregated)
# Test for all countries
ggplot(aggregated, aes(s,g)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F)
cor(aggregated$g, aggregated$s)
# Test for OECD countries
# OECD countries vector
oecd_countries <- c(
"Australia", "Austria", "Belgium", "Canada", "Chile", "Colombia", "Costa Rica",
"Czech Republic", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Iceland", "Ireland", "Israel", "Italy", "Japan", "Republic of Korea", "Latvia",
"Lithuania", "Luxembourg", "Mexico", "Netherlands", "New Zealand", "Norway",
"Poland", "Portugal", "Slovakia", "Slovenia", "Spain", "Sweden",
"Switzerland", "Turkey", "United Kingdom", "United States of America"
)
# Example: filter the pwt dataset for OECD countries
oecd <- aggregated[aggregated$country %in% oecd_countries, ]
ggplot(oecd, aes(s,g)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F)
cor(oecd$g, oecd$s)
# Test for all countries
ggplot(aggregated, aes(r,s)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F)
View(aggregated)
pwt <- pwt10.01 %>%
group_by(country) %>%
reframe(
year,
country,
y = rgdpo / pop,              # GDP per capita
g = c(NA, diff(log(y))),      # Growth rate with proper alignment
s = csh_i,                    # Rename save
n = c(NA, diff(log(pop))),    # Population growth
delta,                        # Depreciation rate
r = g + delta + n
)
aggregated <- pwt %>%
group_by(country) %>%
summarise(across(-c(1, 2), function(x){mean(x, na.rm = TRUE)}), .groups = "drop")
# Test for all countries
ggplot(aggregated, aes(s,g)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F)
cor(aggregated$g, aggregated$s)
# Test for OECD countries
# OECD countries vector
oecd_countries <- c(
"Australia", "Austria", "Belgium", "Canada", "Chile", "Colombia", "Costa Rica",
"Czech Republic", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Iceland", "Ireland", "Israel", "Italy", "Japan", "Republic of Korea", "Latvia",
"Lithuania", "Luxembourg", "Mexico", "Netherlands", "New Zealand", "Norway",
"Poland", "Portugal", "Slovakia", "Slovenia", "Spain", "Sweden",
"Switzerland", "Turkey", "United Kingdom", "United States of America"
)
# Example: filter the pwt dataset for OECD countries
oecd <- aggregated[aggregated$country %in% oecd_countries, ]
ggplot(oecd, aes(s,g)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F)
cor(oecd$g, oecd$s)
# Test for all countries
ggplot(aggregated, aes(r,s)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F)
cor(aggregated$g, aggregated$s)
cor(aggregated$r, aggregated$s)
cor(aggregated$r, aggregated$s)
View(aggregated)
args(cor)
?cor
cor(aggregated$r, aggregated$s, use = "na.or.complete")
# Example: filter the pwt dataset for OECD countries
oecd <- aggregated[aggregated$country %in% oecd_countries, ]
# Example: filter the pwt dataset for OECD countries
ggplot(oecd, aes(r,s)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F)
cor(oecd$r, oecd$s)
install.packages("pwt10")
library(pwt10)
pwt10.01
data("pwt10.01")
pwt <- pwt10.01
head(pwt)
View(pwt10.01)
?pwt|
?pwt10.01
?pwt
?pwt10.01
pwt <- pwt10.01 %>%
group_by(country) %>%
reframe(
year,
country,
y = rgdpo / pop,              # GDP per capita
g = diff(log(y)),      # Growth rate with proper alignment
s = csh_i,                    # Rename save
n = diff(log(pop)),    # Population growth
delta,                        # Depreciation rate
r = g + delta + n
)
library(tidyverse)
pwt <- pwt10.01 %>%
group_by(country) %>%
reframe(
year,
country,
y = rgdpo / pop,              # GDP per capita
g = diff(log(y)),             # Growth rate with proper alignment
s = csh_i,                    # Rename save
n = diff(log(pop)),           # Population growth
delta,                        # Depreciation rate
r = g + delta + n
)
pwt <- pwt10.01 %>%
group_by(country) %>%
reframe(
year,
country,
y = rgdpo / pop,              # GDP per capita
g = c(NA, diff(log(y))),      # Growth rate with proper alignment
s = csh_i,                    # Rename save
n = c(NA, diff(log(pop))),    # Population growth
delta,                        # Depreciation rate
r = g + delta + n
)
head(pwt)
aggregated <- pwt %>%
group_by(country) %>%
summarise(across(-c(1, 2), function(x){mean(x, na.rm = TRUE)}), .groups = "drop")
head(aggregated)
# Test for all countries
ggplot(aggregated, aes(s,g)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F)
cor(aggregated$g, aggregated$s)
# Test for OECD countries
# OECD countries vector
oecd_countries <- c(
"Australia", "Austria", "Belgium", "Canada", "Chile", "Colombia", "Costa Rica",
"Czech Republic", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Iceland", "Ireland", "Israel", "Italy", "Japan", "Republic of Korea", "Latvia",
"Lithuania", "Luxembourg", "Mexico", "Netherlands", "New Zealand", "Norway",
"Poland", "Portugal", "Slovakia", "Slovenia", "Spain", "Sweden",
"Switzerland", "Turkey", "United Kingdom", "United States of America"
)
# Example: filter the pwt dataset for OECD countries
oecd <- aggregated[aggregated$country %in% oecd_countries, ]
oecd
ggplot(oecd, aes(s,g)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F)
cor(oecd$g, oecd$s)
# Test for all countries
ggplot(aggregated, aes(r,s)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F)
cor(aggregated$r, aggregated$s, use = "na.or.complete")
# Example: filter the pwt dataset for OECD countries
ggplot(oecd, aes(r,s)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "lm", se = F)
cor(oecd$r, oecd$s)

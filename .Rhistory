df <- data("pwt10.0")
library(dplyr)
rm(list = ls())
library(pwt10)
library(dplyr)
df <- data("pwt10.0")
df <- "pwt10.0"
df <- pwt10.0
library(pwt10)
library(dplyr)
df <- pwt10.0
rm(list = ls())
library(pwt10)
library(dplyr)
df <- pwt10.0
View(df)
names(df)
install.packages("WDI")
?WDI
library(WDI)
?WDI
library(WDI)
WDI(
country = "all",
indicator = "NY.GDP.PCAP.PP.KD",
start = 1960,
end = NULL,
)
pwt <- pwt10.0
wdi <- WDI(
country = "all",
indicator = "NY.GDP.PCAP.PP.KD",
start = 1960,
end = NULL,
)
rm(list = df)
rm(df)
wdi <- WDI(
country = "all",
indicator = c("NY.GDP.MKTP.PP.KD", "NY.GDP.PCAP.PP.KD"),
start = 1960,
end = NULL,
)
View(wdi)
wdi <- WDI(
country = "all",
indicator = c("NY.GDP.MKTP.PP.KD", "NY.GDP.PCAP.PP.KD"),
start = 1960,
end = NULL,
) %>%
na.omit()
View(wdi)
View(pwt)
library(pwt10.1)
library(pwt10)
library(pwt)
install.packages("pwt10.01")
View(pwt)
View(pwt)
?pwt
?pwt10
library(pwt10)
?pwt10
??pwt10
growth_gdppc <- pwt %>%
summarise(rgdppc = rgdpo/pop)
View(growth_gdppc)
growth_gdppc <- pwt %>%
summarise(country, rgdppc = rgdpo/pop)
growth_gdppc <- pwt %>%
summarise(country, year, rgdppc = rgdpo/pop)
growth_gdppc <- pwt %>%
reframe(country, year, rgdppc = rgdpo/pop)
View(growth_gdppc)
growth_gdppc <- pwt %>%
reframe(country, year, rgdppc = rgdpo/pop) %>%
group_by(country) %>%
mutate(g = )
growth_gdppc <- pwt %>%
reframe(country, year, rgdppc = rgdpo/pop) %>%
group_by(country) %>%
mutate(g = (lag(rgdppc)/rgdppc - 1)*100)
View(growth_gdppc)
growth_gdppc %>%
filter(country = "Mexico")
growth_gdppc %>%
filter(country == "Mexico")
mutate(g = (rgdppc/lag(rgdppc) - 1)*100)
growth_gdppc <- pwt %>%
reframe(country, year, rgdppc = rgdpo/pop) %>%
group_by(country) %>%
sort()
growth_gdppc <- pwt %>%
reframe(country, year, rgdppc = rgdpo/pop) %>%
group_by(country) %>%
mutate(g = (rgdppc/lag(rgdppc) - 1)*100)
growth_gdppc %>%
filter(country == "Mexico")
growth_gdppc %>%
filter(country == "Mexico") %>%
plot()
growth_gdppc %>%
filter(country == "Mexico") %>%
plot(year, g)
growth_gdppc <- pwt %>%
reframe(country, year, rgdppc = rgdpo/pop) %>%
group_by(country) %>%
mutate(g = (rgdppc/lag(rgdppc) - 1)*100)
View(growth_gdppc)
growth_gdppc %>%
filter(country == "Mexico") %>%
plot(year, g)
growth_gdppc %>%
filter(country == "Mexico") %>%
plot(.$year, .$g)
growth_gdppc %>%
filter(country == "Mexico") %>%
plot(growth_gdppc$year, growth_gdppc$g)
growth_gdppc %>%
filter(country == "Mexico")
growth_gdppc %>%
filter(country == "Mexico") %>%
plot(year, "g")
growth_gdppc %>%
filter(country == "Mexico")
g <- c(0.005, 0.03, 0.05,0.1)
t <- linspace(100, 200, n = 1000)
linspace(1, 10, 9)
t <- seq(100, 200, n = 1000)
t <- seq(100, 200, lenght.out = 1000)
t <- seq(100, 200, length.out = 1000)
plot(100*exp(t*i))
g <- c(0.005, 0.03, 0.05,0.1)
t <- seq(100, 200, length.out = 1000)
for (i in g){
plot(100*exp(t*i))
}
plot(t, 100 * exp(t * g[1]), type = "l", col = "red", ylim = c(0, 100 * exp(t * max(g))[1000]), xlab = "t", ylab = "y", lwd = 2)
# Add other curves
for (i in g[-1]) {
lines(t, 100 * exp(t * i), col = ifelse(i == 0.03, "blue", ifelse(i == 0.05, "green", "purple")), lwd = 2)
}
?tibble
# Tasas de crecimiento PIBPC
library(dplyr)
?tibble
library(purr)
library(purrr)
# Create the tibble for each g
df <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = t * .x))
plot(df)
View(df)
library(ggplot2)
ggplot(df, aes(t, value, col = g_value)) +
geom_line()
ggplot(df, aes(t, value, fill = g_value)) +
geom_line()
ggplot(df, aes(t, value, color = g_value)) +
geom_line()
ggplot(df, aes(t, value, color = g_value)) +
geom_point()
ggplot(df, aes(t, value, color = factor(g_value))) +
geom_point()
t <- seq(0, 200, length.out = 1000)
# Create the tibble for each g
df <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = t * .x))
ggplot(df, aes(t, value, color = factor(g_value))) +
geom_point()
# Create the tibble for each g
df <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*exp(t * .x)))
ggplot(df, aes(t, value, color = factor(g_value))) +
geom_point()
t <- seq(100, 200, length.out = 1000)
# Create the tibble for each g
df <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*exp(t * .x)))
ggplot(df, aes(t, value, color = factor(g_value))) +
geom_point()
# Create the tibble for each g
cont <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*exp(t * .x)))
dis <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*(1 +.x)^t))
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_point()
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_point()
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Discrete")
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Continuous")
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Discrete")
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Continuous")
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Discrete")
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Continuous")
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Discrete")
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Discrete",
subtitle = "$100()$")
subtitle = expression("100(1+x)^t")
labs(title = "Discrete",
ggplot(dis, aes(t, value, color = factor(g_value))) +
cont[g_value == 0.03]
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Discrete",
subtitle = expression("100(1+x)^t"))
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t))
cont[g_value == 0.03]
cont[cont[g_value == 0.03] & cont[value] == 200]
View(cont)
cont[cont["g_value" == 0.03] & cont[value] == 200]
cont[cont["g_value" == 0.03] & cont["value"] == 200]
cont[cont$g_value == 0.03 & cont$value == 200, ]
cont[cont$g_value == 0.03 & cont$value == 200, ]
cont[cont$value == 200, ]
t <- seq(100, 201, length.out = 1000)
# Create the tibble for each g
cont <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*exp(t * .x)))
dis <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*(1 +.x)^t))
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Continuous")
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t))
cont[cont$value == 200, ]
cont[cont$g_value == 0.03 & cont$t == 200, ]
cont[cont$g_value == 0.03 & cont$t == 200, ]
t <- seq(0, 200, length.out = 1000)
cont[cont$g_value == 0.03 & cont$value == 200, ]
t <- seq(0, 200, length.out = 10000)
# Create the tibble for each g
cont <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*exp(t * .x)))
dis <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*(1 +.x)^t))
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Continuous")
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t))
cont[cont$g_value == 0.03 & cont$value == 200, ]
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Continuous",
subtitle = expression(100\exp^{gt}))
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Continuous",
subtitle = expression(100 \exp^{gt}))
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Continuous",
subtitle = expression(100 exp^{gt}))
subtitle = expression(100 * exp(g * t))
subtitle = expression(100 * exp(g * t))
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Continuous",
subtitle = expression(100 * exp(g * t)))
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t))
ln(2)
log(exp)
exp()
exp(1)
log(exp(0))
log(2)
cont[cont$g_value == 0.03 & cont$value == 200, ]
t <- seq(0, 25, length.out = 10000)
# Create the tibble for each g
cont <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*exp(t * .x)))
dis <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*(1 +.x)^t))
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Continuous",
subtitle = expression(100 * exp(g * t)))
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t))
t <- seq(0, 25, length.out = 100)
# Create the tibble for each g
cont <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*exp(t * .x)))
dis <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*(1 +.x)^t))
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Continuous",
subtitle = expression(100 * exp(g * t)))
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_point() +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t))
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_line() +
labs(title = "Continuous",
subtitle = expression(100 * exp(g * t)))
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_line() +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t))
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_line(size = 5) +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t))
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_line(size = 2) +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t))
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t))
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Continuous",
subtitle = expression(100 * exp(g * t)))
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Continuous",
subtitle = expression(100 * exp(g * t))) +
scale_y_continuous(limits = c(0, 100))  # Set y-axis limits
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t)) +
scale_y_continuous(limits = c(0, 100))  # Set y-axis limits
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Continuous",
subtitle = expression(100 * exp(g * t))) +
scale_y_continuous(limits = c(100, 200))  # Set y-axis limits
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t)) +
scale_y_continuous(limits = c(100, 200))  # Set y-axis limits
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Continuous",
subtitle = expression(100 * exp(g * t))) +
scale_y_continuous(limits = c(100, 200)) + # Set y-axis limits
theme_classic()
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t)) +
scale_y_continuous(limits = c(100, 200)) + # Set y-axis limits
theme_classic()
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Continuous",
subtitle = expression(100 * exp(g * t))) +
scale_y_continuous(limits = c(100, 200)) + # Set y-axis limits
theme_classic()
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t)) +
scale_y_continuous(limits = c(100, 200)) + # Set y-axis limits
theme_classic()
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t),
color = "Rates") +
scale_y_continuous(limits = c(100, 200)) + # Set y-axis limits
theme_classic()
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Continuous",
subtitle = expression(100 * exp(g * t)),
color = "Rates") +
scale_y_continuous(limits = c(100, 200)) + # Set y-axis limits
theme_classic()
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t),
color = "Rates") +
scale_y_continuous(limits = c(100, 200)) + # Set y-axis limits
theme_classic()
g <- c(0.001, 0.005, 0.03, 0.05,0.1)
t <- seq(0, 25, length.out = 100)
# Create the tibble for each g
cont <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*exp(t * .x)))
dis <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*(1 +.x)^t))
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Continuous",
subtitle = expression(100 * exp(g * t)),
color = "Rates") +
scale_y_continuous(limits = c(100, 200)) + # Set y-axis limits
theme_classic()
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t),
color = "Rates") +
scale_y_continuous(limits = c(100, 200)) + # Set y-axis limits
theme_classic()
rm(df)
git init
install.packages("usethis")
usethis::use_git_config(user.name="Juan Alvaro", user.email="jadrk040507@gmail.com")
usethis::create_github_token()
rm(list = ls())
library(pwt10)
library(WDI)
library(dplyr)
pwt <- pwt10.0
wdi <- WDI(
country = "all",
indicator = c("NY.GDP.MKTP.PP.KD", "NY.GDP.PCAP.PP.KD"),
start = 1960,
end = NULL,
) %>%
na.omit()
wdi <- WDI(
country = "all",
indicator = c("NY.GDP.MKTP.PP.KD", "NY.GDP.PCAP.PP.KD"),
start = 1960,
end = NULL,
) %>%
na.omit()
head(wdi)
wdi <- WDI(
country = "all",
indicator = c("NY.GDP.MKTP.PP.KD", "NY.GDP.PCAP.PP.KD"),
start = 1960,
end = NULL,
) %>%
na.omit()
growth_gdppc <- pwt %>%
reframe(country, year, rgdppc = rgdpo/pop) %>%
group_by(country) %>%
mutate(g = (rgdppc/lag(rgdppc) - 1)*100)
growth_gdppc %>%
filter(country == "Mexico")
rm(list = ls())
# Tasas de crecimiento PIBPC
library(dplyr)
library(purrr)
library(ggplot2)
g <- c(0.001, 0.005, 0.03, 0.05,0.1)
t <- seq(0, 25, length.out = 100)
# Create the tibble for each g
cont <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*exp(t * .x)))
dis <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*(1 +.x)^t))
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Continuous",
subtitle = expression(100 * exp(g * t)),
color = "Rates") +
scale_y_continuous(limits = c(100, 200)) + # Set y-axis limits
theme_classic()
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t),
color = "Rates") +
scale_y_continuous(limits = c(100, 200)) + # Set y-axis limits
theme_classic()
print(paste(i*100,":",log(2)/g)
}
for (i in g)
for (i in g){
for (i in g){
print(paste(i*100,":",log(2)/g))
for (i in g){
print(paste(i*100,":",log(2)/g))
}
print(paste(i*100,":",log(2)/g))
print(paste(i*100,":",log(2)/g))
print(paste(g*100,":",log(2)/g))
print(paste(g*100,":",log(2)/(g*100)))
70/2
70/0.1
log(2)
print(paste(g*100,":",log(2)/(g)))
print(paste(g*100,":",log(2)/(log(1+g))))
tibble(
tibble(
tibble(
rate = g,
T = log(2)/log(1+g)
)
tibble(
rate = g,
T = log(2)/log(1+g)
)
tibble(
rate = g*100,
T = log(2)/log(1+g)
)

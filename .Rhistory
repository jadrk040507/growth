end = NULL,
) %>%
na.omit()
head(wdi)
wdi <- WDI(
country = "all",
indicator = c("NY.GDP.MKTP.PP.KD", "NY.GDP.PCAP.PP.KD"),
start = 1960,
end = NULL,
) %>%
na.omit()
growth_gdppc <- pwt %>%
reframe(country, year, rgdppc = rgdpo/pop) %>%
group_by(country) %>%
mutate(g = (rgdppc/lag(rgdppc) - 1)*100)
growth_gdppc %>%
filter(country == "Mexico")
rm(list = ls())
# Tasas de crecimiento PIBPC
library(dplyr)
library(purrr)
library(ggplot2)
g <- c(0.001, 0.005, 0.03, 0.05,0.1)
t <- seq(0, 25, length.out = 100)
# Create the tibble for each g
cont <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*exp(t * .x)))
dis <- map_dfr(g, ~ tibble(g_value = .x, t = t, value = 100*(1 +.x)^t))
ggplot(cont, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Continuous",
subtitle = expression(100 * exp(g * t)),
color = "Rates") +
scale_y_continuous(limits = c(100, 200)) + # Set y-axis limits
theme_classic()
ggplot(dis, aes(t, value, color = factor(g_value))) +
geom_line(size = 1) +
labs(title = "Discrete",
subtitle = expression(100(1+x)^t),
color = "Rates") +
scale_y_continuous(limits = c(100, 200)) + # Set y-axis limits
theme_classic()
print(paste(i*100,":",log(2)/g)
}
for (i in g)
for (i in g){
for (i in g){
print(paste(i*100,":",log(2)/g))
for (i in g){
print(paste(i*100,":",log(2)/g))
}
print(paste(i*100,":",log(2)/g))
print(paste(i*100,":",log(2)/g))
print(paste(g*100,":",log(2)/g))
print(paste(g*100,":",log(2)/(g*100)))
70/2
70/0.1
log(2)
print(paste(g*100,":",log(2)/(g)))
print(paste(g*100,":",log(2)/(log(1+g))))
tibble(
tibble(
tibble(
rate = g,
T = log(2)/log(1+g)
)
tibble(
rate = g,
T = log(2)/log(1+g)
)
tibble(
rate = g*100,
T = log(2)/log(1+g)
)
library(pwt10)
library(WDI)
library(dplyr)
pwt <- pwt10.0
wdi <- WDI(
country = "all",
indicator = c("NY.GDP.MKTP.PP.KD", "NY.GDP.PCAP.PP.KD"),
start = 1960,
end = NULL,
) %>%
na.omit()
spec(pwt$year)
library(tidyverse)
spec(pwt$year)
spec(pwt$year)
?spec
readr::spec(pwt$year)
readr::spec(pwt)
class(pwt)
pwt <- as_tibble(pwt)
readr::spec(pwt$year)
class(pwt)
readr::spec(pwt)
readr::spec(pwt$year)
readr::spec(pwt$currency)
pwt <- pwt10.0
today()
year(today)
year(today())
year()
quarter(1994-Q3)
quarter(Q3)
rm(list = ls())
library(pwt10)
library(tidyverse)
pwt <- pwt10.01
View(pwt)
?pwt
?pwt10
??pwt10
usa <- pwt %>%
filter(country == "United States of America") %>%
ggplot(year, labsh) +
geom_line()
ggplot(aes(year, labsh) +
usa <- pwt %>%
filter(country == "United States of America") %>%
ggplot(aes(year, labsh)) +
geom_line()
pwt %>%
filter(country == "United States of America") %>%
ggplot(aes(year, labsh)) +
geom_line()
pwt %>%
filter(country == "United States of America") %>%
ggplot(aes(year, labsh)) +
geom_line() +
theme_classic()
pwt %>%
filter(country == "United States of America") %>%
ggplot(aes(year, labsh)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
theme_classic()
pwt %>%
filter(country == "United States of America") %>%
ggplot(aes(year, labsh)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
labs(
title = "Labor share of GDP",
x = "Year",
y = "% of GDP"
)
pwt %>%
filter(country == "United States of America") %>%
ggplot(aes(year, labsh)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
labs(
title = "Labor share of GDP",
x = "Year",
y = "% of GDP"
) +
theme_classic()
pwt %>%
filter(country == "United States of America") %>%
ggplot(aes(year, labsh)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
labs(
title = "Labor share of GDP",
x = "Year",
y = "% of GDP"
) +
theme_bw()
model <- lm(log(rgdpna) ~ log(rnna*rgdpna/labsh))
model <- lm(log(rgdpna) ~ log(rnna*rgdpna/labsh), data = pwt)
usa <- pwt %>%
filter(country == "United States of America") %>%
ggplot(aes(year, labsh)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
labs(
title = "Labor share of GDP",
x = "Year",
y = "% of GDP"
) +
theme_bw()
usa <- pwt %>%
filter(country == "United States of America")
pwt %>%
filter(country == "United States of America") %>%
ggplot(aes(year, labsh)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
labs(
title = "Labor share of GDP",
x = "Year",
y = "% of GDP"
) +
theme_bw()
model <- lm(log(rgdpna) ~ log(rnna*rgdpna/labsh), data = usa)
summary(model)
usa <- pwt %>%
filter(country == "United States of America")
usa %>%
ggplot(aes(year, labsh)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
labs(
title = "Labor share of GDP",
x = "Year",
y = "% of GDP"
) +
theme_bw()
usa %>%
reframe(mean = mean(labsh))
model <- lm(labsh ~ year, data = usa)
summary(model)
usa <- pwt %>%
filter(country == "United States of America")
usa %>%
reframe(mean = mean(labsh))
usa %>%
ggplot(aes(year, labsh)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
labs(
title = "Labor share of GDP",
x = "Year",
y = "% of GDP"
) +
theme_bw()
model <- lm(labsh ~ year, data = usa)
summary(model)
usa <- pwt %>%
filter(country == "United States of America",
year >= 1950,
year <= 2019)
usa %>%
reframe(mean = mean(labsh))
usa %>%
ggplot(aes(year, labsh)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
labs(
title = "Labor share of GDP",
x = "Year",
y = "% of GDP"
) +
theme_bw()
model <- lm(labsh ~ year, data = usa)
summary(model)
usa <- pwt %>%
filter(country == "United States of America")
usa %>%
reframe(mean = mean(labsh))
usa %>%
ggplot(aes(year, labsh)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
labs(
title = "Labor share of GDP",
x = "Year",
y = "% of GDP"
) +
theme_bw()
model <- lm(labsh ~ year, data = usa)
summary(model)
model <- lm(labsh ~ year-1950, data = usa)
model <- lm(labsh ~ (year-1950), data = usa)
summary(model)
usa %>%
reframe(mean = mean(labsh)) %>%
mutate(year_1950 = year-1950)
usa %>%
reframe(mean = mean(labsh)) %>%
mutate(year_1950 = as.number(year)-1950)
usa %>%
reframe(mean = mean(labsh)) %>%
mutate(year_1950 = as.numeric(year)-1950)
usa %>%
reframe(mean = mean(labsh)) %>%
mutate(year_1950 = as.double(year)-1950)
View(usa)
usa %>%
reframe(mean = mean(labsh)) %>%
class(year)
str(usa)
usa <- pwt %>%
filter(country == "United States of America") %>%
mutate(year_1950 = year-1950)
usa %>%
reframe(mean = mean(labsh))
usa %>%
ggplot(aes(year, labsh)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
labs(
title = "Labor share of GDP",
x = "Year",
y = "% of GDP"
) +
theme_bw()
model <- lm(labsh ~ year_1950, data = usa)
summary(model)
usa %>%
reframe(mean = mean(labsh))
usa %>%
ggplot(aes(year, labsh)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
labs(
title = "Labor share of GDP",
x = "Year",
y = "% of GDP"
) +
theme_bw()
model <- lm(labsh ~ year_1950, data = usa)
summary(model)
View(model)
View(usa)
usa <- pwt %>%
filter(country == "Mexico") %>%
mutate(year_1950 = year-1950)
usa %>%
reframe(mean = mean(labsh))
usa %>%
ggplot(aes(year, labsh)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
labs(
title = "Labor share of GDP",
x = "Year",
y = "% of GDP"
) +
theme_bw()
model <- lm(labsh ~ year_1950, data = usa)
summary(model)
usa <- pwt %>%
filter(country == "United States of America") %>%
mutate(year_1950 = year-1950)
usa %>%
reframe(mean = mean(labsh))
usa %>%
ggplot(aes(year, labsh)) +
geom_line() +
scale_y_continuous(limits = c(0,1)) +
labs(
title = "Labor share of GDP",
x = "Year",
y = "% of GDP"
) +
theme_bw()
model <- lm(labsh ~ year_1950, data = usa)
summary(model)
lm(log(rgdpna) ~ log(rnna/(rgdpna*labsh)), data = usa) %>%
summary()
usa %>%
rgdpna*labsh
usa %>%
reframe(rgdpna*labsh)
install.packages("tidymodels")
data(gss)
library(tidymodels)
data(gss)
str(gss)
F_hat <- gss %>%
specify(age ~ partyid) %>%
calculate(stat = "F")
View(F_hat)
null_dist <- gss %>%
specify(age ~ partyid) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "F")
View(null_dist)
visualize(null_dist) +
shade_p_value(obs_stat = F_hat, direction = "greater")
null_dist %>%
get_p_value(obs_stat = F_hat, direction = "greater")
gss %>%
specify(response = age)
gss %>%
specify(response = age) %>%
class()
# as a formula
gss %>%
specify(age ~ partyid)
gss %>%
specify(response = age, explanatory = partyid)
gss %>%
specify(response = college, success = "degree")
gss %>%
specify(college ~ partyid, success = "degree") %>%
hypothesize(null = "independence")
gss %>%
specify(college ~ partyid, success = "degree") %>%
hypothesize(null = "independence")
gss %>%
specify(response = hours) %>%
hypothesize(null = "point", mu = 40)
set.seed(1)
gss %>%
specify(response = hours) %>%
hypothesize(null = "point", mu = 40) %>%
generate(reps = 1000, type = "bootstrap")
gss %>%
specify(partyid ~ age) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute")
gss %>%
specify(response = hours) %>%
hypothesize(null = "point", mu = 40) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
gss %>%
specify(response = hours) %>%
hypothesize(null = "point", mu = 40) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "diff in means")
gss %>%
specify(response = hours) %>%
hypothesize(null = "point", mu = 40) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "diff in mean")
gss %>%
specify(response = hours) %>%
hypothesize(null = "point", mu = 40) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
gss %>%
specify(age ~ college) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate("diff in means", order = c("degree", "no degree"))
obs_mean <- gss %>%
specify(response = hours) %>%
calculate(stat = "mean")
# generate a null distribution
null_dist <- gss %>%
specify(response = hours) %>%
hypothesize(null = "point", mu = 40) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
null_dist %>%
visualize()
null_dist %>%
visualize() +
shade_p_value(obs_stat = obs_mean, direction = "two-sided")
# get a two-tailed p-value
p_value <- null_dist %>%
get_p_value(obs_stat = obs_mean, direction = "two-sided")
p_value
# generate a distribution like the null distribution,
# though exclude the null hypothesis from the pipeline
boot_dist <- gss %>%
specify(response = hours) %>%
generate(reps = 1000, type = "bootstrap") %>%
calculate(stat = "mean")
# start with the bootstrap distribution
ci <- boot_dist %>%
# calculate the confidence interval around the point estimate
get_confidence_interval(point_estimate = obs_mean,
# at the 95% confidence level
level = .95,
# using the standard error
type = "se")
ci
boot_dist %>%
visualize() +
shade_confidence_interval(endpoints = ci)
# calculate an observed t statistic
obs_t <- gss %>%
specify(response = hours) %>%
hypothesize(null = "point", mu = 40) %>%
calculate(stat = "t")
View(obs_t)
# switch out calculate with assume to define a distribution
t_dist <- gss %>%
specify(response = hours) %>%
assume(distribution = "t")
# visualize the theoretical null distribution
visualize(t_dist) +
shade_p_value(obs_stat = obs_t, direction = "greater")
# more exactly, calculate the p-value
get_p_value(t_dist, obs_t, "greater")
# find the theory-based confidence interval
theor_ci <-
get_confidence_interval(
x = t_dist,
level = .95,
point_estimate = obs_mean
)
theor_ci
observed_fit <- gss %>%
specify(hours ~ age + college) %>%
fit()
View(observed_fit)
null_fits <- gss %>%
specify(hours ~ age + college) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
fit()
null_fits
get_confidence_interval(
null_fits,
point_estimate = observed_fit,
level = .95
)
visualize(null_fits) +
shade_p_value(observed_fit, direction = "both")
View(observed_fit)
gss %>%
lm(hours ~ age + college) %>%
summary()
lm(hours ~ age + college, data = gss) %>%
summary()
